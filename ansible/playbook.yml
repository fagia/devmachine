---

- name: Provisioning

  hosts: localhost

  tasks:

    - name: Including vars of config.yml into the params variable
      include_vars:
        file: ../config.yml
        name: params

    - name: Temp hack to get right os related vars
      set_fact:
        ansible_os_family: Debian
        ansible_distribution: Ubuntu
        ansible_distribution_release: xenial

    - name: Clean ansible-vault password file
      file:
        path: "{{ vault_password_file }}"
        state: absent
      become: True
      changed_when: False
      when: vault_password_file is defined

    - name: Install aptitude
      apt: name=aptitude state=latest install_recommends=no
      become: True

    - name: Update all packages to the latest version
      apt:
        update_cache: yes
        upgrade: dist
      become: True

    - import_tasks: tasks/add-roles.yml
    - import_tasks: tasks/setup-locale.yml
    - import_tasks: tasks/create-user.yml
    - import_tasks: tasks/setup-git.yml
    - import_tasks: tasks/init-wallpaper.yml

    - import_tasks: tasks/install/chrome.yml
    - import_tasks: tasks/install/mariadb.yml
    - import_tasks: tasks/install/dbeaver.yml
    - import_tasks: tasks/install/apache.yml
    - import_tasks: tasks/install/php.yml

    - name: Install PHP extensions for MariaDB
      apt: name=php-mysql state=latest
      become: True
      when: params.apps.install.mariadb and params.apps.install.php

    - name: Install Apache extensions for PHP
      apt: name=libapache2-mod-php state=latest
      become: True
      when: params.apps.install.apache and params.apps.install.php

    - import_tasks: tasks/install/mailhog.yml
    - import_tasks: tasks/install/filezilla.yml
    - import_tasks: tasks/install/sublimetext.yml
    - import_tasks: tasks/install/java.yml
    - import_tasks: tasks/install/ruby.yml
    - import_tasks: tasks/install/maven.yml
    - import_tasks: tasks/install/gradle.yml
    - import_tasks: tasks/install/intellij_idea.yml
    - import_tasks: tasks/install/pycharm.yml
    - import_tasks: tasks/install/docker.yml
    - import_tasks: tasks/install/libreoffice.yml
    - import_tasks: tasks/install/camunda/modeler.yml

    - name: Running additional roles
      include_role:
        name: "roles/additional/{{ item.rsplit('/', 1)[1].rsplit('.git')[0] }}"
        private: True
      with_items: "{{ params.roles }}"
      when: ( params.roles|length > 0 ) and ( ansible_version.full is version_compare('2.5.0.0', '>') )

    - import_tasks: tasks/init-workspace.yml
      when: params.workspace.gitrepos|length > 0

    - name: Add necessary menu items
      template:
        src: 'application.dockitem.j2'
        dest: '{{ plank_dock_configuration_dir }}/{{ item }}.dockitem'
        force: no
        mode: 0644
      with_items: "{{ necessary_menu_items }}"
      become: True
      become_user: '{{ params.user.username }}'

    - name: Remove unecessary applications
      apt: name={{ item }} state=absent purge=yes
      with_items:
        - pantheon-mail
        - audience
        - noise
        - byobu
        - epiphany-browser
        - epiphany
        - appcenter
        - maya-calendar
      become: True

    - name: Clean apt cache
      command: "apt clean"
      become: True

    - name: Autoremove old packages
      command: "apt autoremove --purge -y"
      become: True
